{"version":3,"file":"component---src-templates-blog-index-js-a39a5810300c39ee78a6.js","mappings":"mPAgBMA,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAmEH,OAnEGA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACJC,OAAA,WACE,IAAMC,EAAYC,GAAAA,CAAIC,KAAM,sCAGtBC,GAFUD,KAAKE,MAAMC,YAAYC,QAEzBL,GAAAA,CAAIC,KAAM,4BAExB,OACE,gBAAC,IAAD,CAAQK,SAAUL,KAAKE,MAAMG,SAAUC,MAAOR,GAC5C,gBAAC,IAAD,MACA,6BACE,gBAAC,IAAD,OAEF,4BACGG,EAAMM,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNF,EAAQP,GAAAA,CAAIS,EAAM,sBAAwBA,EAAKC,OAAOC,KACtDC,EAAaZ,GAAAA,CAAIS,EAAM,0BAC7B,OACE,gBAAC,EAAAI,KAAD,CACEC,MAAO,CACLC,UAAW,OACXC,eAAgB,OAChBC,MAAO,qBAETC,GAAIT,EAAKC,OAAOC,KAChBQ,IAAI,YAEJ,2BAASC,IAAKX,EAAKC,OAAOC,MACxB,8BACE,sBACEG,MAAO,CACLG,MAAO,kBACPI,WAAY,yBACZC,UAAUC,EAAAA,EAAAA,IAAO,GACjBC,cAAcD,EAAAA,EAAAA,IAAO,EAAI,KAG1BhB,GAEH,8BACGkB,EAAAA,EAAAA,IAAehB,EAAKiB,YAAYC,MADnC,OAESC,EAAAA,EAAAA,IAAkBnB,EAAKoB,YAFhC,OAIGC,EAAAA,EAAAA,IAAqBrB,EAAKiB,eAG/B,qBACEZ,MAAO,CAAEiB,UAAW,OACpBC,wBAAyB,CACvBC,OAAQxB,EAAKiB,YAAYQ,WAI5BtB,GACC,gBAAC,EAAAuB,EAAD,CACEC,OAAOC,EAAAA,EAAAA,GAASzB,GAChB0B,IAAK,qBAQnB,gBAAC,IAAD,QAGL,EAnEGzC,CAA0B0C,EAAAA,WAsEhC","sources":["webpack://j.blaszyk.me/./src/templates/blog-index.js"],"sourcesContent":["import { Link, graphql } from 'gatsby';\nimport {\n  formatPostDate,\n  formatReadingTime,\n  formatNumberOfPhotos,\n} from '../utils/helpers';\n\nimport Bio from '../components/Bio';\nimport Footer from '../components/Footer';\nimport Layout from '../components/Layout';\nimport React from 'react';\nimport SEO from '../components/SEO';\nimport get from 'lodash/get';\nimport { rhythm } from '../utils/typography';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\n\nclass BlogIndexTemplate extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title');\n    const langKey = this.props.pageContext.langKey;\n\n    const posts = get(this, 'props.data.allMdx.edges');\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO />\n        <aside>\n          <Bio />\n        </aside>\n        <main>\n          {posts.map(({ node }) => {\n            const title = get(node, 'frontmatter.title') || node.fields.slug;\n            const indexImage = get(node, 'frontmatter.indexImage');\n            return (\n              <Link\n                style={{\n                  boxShadow: 'none',\n                  textDecoration: 'none',\n                  color: 'var(--textNormal)',\n                }}\n                to={node.fields.slug}\n                rel=\"bookmark\"\n              >\n                <article key={node.fields.slug}>\n                  <header>\n                    <h3\n                      style={{\n                        color: 'var(--textLink)',\n                        fontFamily: 'Montserrat, sans-serif',\n                        fontSize: rhythm(1),\n                        marginBottom: rhythm(1 / 4),\n                      }}\n                    >\n                      {title}\n                    </h3>\n                    <small>\n                      {formatPostDate(node.frontmatter.date)}\n                      {` • ${formatReadingTime(node.timeToRead)}`}\n                      {` • `}\n                      {formatNumberOfPhotos(node.frontmatter)}\n                    </small>\n                  </header>\n                  <p\n                    style={{ marginTop: '5px' }}\n                    dangerouslySetInnerHTML={{\n                      __html: node.frontmatter.spoiler,\n                    }}\n                  />\n\n                  {indexImage && (\n                    <GatsbyImage\n                      image={getImage(indexImage)}\n                      alt={'Blog Image'}\n                    />\n                  )}\n                </article>\n              </Link>\n            );\n          })}\n        </main>\n        <Footer />\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndexTemplate;\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            spoiler\n            indexImage {\n              childImageSharp {\n                gatsbyImageData(width: 800, layout: CONSTRAINED)\n              }\n            }\n            images {\n              id\n            }\n            blogImages {\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["BlogIndexTemplate","render","siteTitle","get","this","posts","props","pageContext","langKey","location","title","map","node","fields","slug","indexImage","Link","style","boxShadow","textDecoration","color","to","rel","key","fontFamily","fontSize","rhythm","marginBottom","formatPostDate","frontmatter","date","formatReadingTime","timeToRead","formatNumberOfPhotos","marginTop","dangerouslySetInnerHTML","__html","spoiler","G","image","getImage","alt","React"],"sourceRoot":""}