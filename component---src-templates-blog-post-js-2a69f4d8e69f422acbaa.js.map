{"version":3,"file":"component---src-templates-blog-post-js-2a69f4d8e69f422acbaa.js","mappings":"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","sources":["webpack://j.blaszyk.me/./i18n.js","webpack://j.blaszyk.me/./src/assets/profile-pic.jpg","webpack://j.blaszyk.me/./src/components/Bio.js","webpack://j.blaszyk.me/./src/components/Panel.js","webpack://j.blaszyk.me/./src/components/SEO.js","webpack://j.blaszyk.me/./src/utils/whitelist.js","webpack://j.blaszyk.me/./src/utils/i18n.js","webpack://j.blaszyk.me/./src/templates/blog-post.js","webpack://j.blaszyk.me/./src/utils/helpers.js"],"sourcesContent":["// Please keep keys lowercase!\nexports.supportedLanguages = {\n  en: 'English',\n};\n","export default __webpack_public_path__ + \"static/profile-pic-4d6b6ee3814c2020fd1d5df1e0e4b5ec.jpg\";","import React from 'react';\nimport profilePic from '../assets/profile-pic.jpg';\nimport { rhythm } from '../utils/typography';\n\nclass Bio extends React.Component {\n  render() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          marginBottom: rhythm(2),\n        }}\n      >\n        <img\n          src={profilePic}\n          alt={`Jedr Blaszyk`}\n          style={{\n            marginRight: rhythm(1 / 2),\n            marginBottom: 0,\n            width: rhythm(2),\n            height: rhythm(2),\n            borderRadius: '50%',\n          }}\n        />\n        <p style={{ maxWidth: 380 }}>\n          Personal blog by{' '}\n          <a href=\"https://mobile.twitter.com/jedr_blaszyk\">Jedr Blaszyk</a>.{' '}\n          I&nbsp;write about stuff I find interesting.\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Bio;\n","import React from 'react';\n\nfunction Panel({ children, style = {} }) {\n  return (\n    <p\n      style={{\n        fontSize: '0.9em',\n        border: '1px solid var(--hr)',\n        borderRadius: '0.75em',\n        padding: '0.75em',\n        background: 'var(--inlineCode-bg)',\n        wordBreak: 'keep-all',\n        ...style,\n      }}\n    >\n      {children}\n    </p>\n  );\n}\n\nexport default Panel;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nconst query = graphql`\n  query GetSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        author\n        description\n        siteUrl\n        social {\n          twitter\n        }\n        image\n      }\n    }\n  }\n`;\n\nfunction SEO({ meta, image, title, description, slug, lang = 'en' }) {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        const { siteMetadata } = data.site;\n        const metaDescription = description || siteMetadata.description;\n        const metaImage = `${siteMetadata.siteUrl}${siteMetadata.image}`;\n        const url = `${siteMetadata.siteUrl}${slug}`;\n        const ogCustomImagePath = `${siteMetadata.siteUrl}${image}`;\n        return (\n          <Helmet\n            htmlAttributes={{ lang }}\n            {...(title\n              ? {\n                  titleTemplate: `%s — ${siteMetadata.title}`,\n                  title,\n                }\n              : {\n                  title: `${siteMetadata.title}`,\n                })}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:url',\n                content: url,\n              },\n              {\n                property: 'og:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: siteMetadata.social.twitter,\n              },\n              {\n                name: 'twitter:title',\n                content: title || siteMetadata.title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                image\n                  ? [\n                      {\n                        property: 'og:image',\n                        content: ogCustomImagePath,\n                      },\n                      {\n                        name: 'twitter:image',\n                        content: ogCustomImagePath,\n                      },\n                    ]\n                  : [\n                      {\n                        property: 'og:image',\n                        content: metaImage,\n                      },\n                      {\n                        name: 'twitter:image',\n                        content: metaImage,\n                      },\n                    ]\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  meta: [],\n  title: '',\n  slug: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  image: PropTypes.string,\n  meta: PropTypes.array,\n  slug: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","// Please keep keys lowercase!\nexport default {\n  'https://reactjs.org': {\n    'pt-br': 'https://pt-br.reactjs.org',\n    // other languages...\n  },\n  // other links...\n};\n","import { supportedLanguages } from './../../i18n';\nimport whitelist from './whitelist';\n\n// This is kind of a mess for some languages.\n// Try to be as short as possible.\n// Make sure you use a real code (e.g. \"ja\", not \"jp\").\n// Some resources:\n// http://www.rfc-editor.org/rfc/bcp/bcp47.txt\n// https://www.w3.org/International/articles/language-tags/\n// https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\n// https://discuss.httparchive.org/t/what-are-the-invalid-uses-of-the-lang-attribute/1022\n\nexport const codeToLanguage = code =>\n  supportedLanguages[code].replace(/ /g, ' ' /* nbsp */);\n\nexport const loadFontsForCode = code => {\n  switch (code) {\n    case 'ru':\n    case 'bg':\n      import('../fonts/fonts-shared.cyrillic.css');\n      import('../fonts/fonts-post.cyrillic.css');\n      break;\n    case 'uk':\n      import('../fonts/fonts-shared.cyrillic.css');\n      import('../fonts/fonts-post.cyrillic.css');\n      import('../fonts/fonts-shared.latin-ext.css');\n      import('../fonts/fonts-post.latin-ext.css');\n      break;\n    case 'cs':\n    case 'da':\n    case 'de':\n    case 'es':\n    case 'fi':\n    case 'fr':\n    case 'he':\n    case 'hu':\n    case 'it':\n    case 'nl':\n    case 'no':\n    case 'pl':\n    case 'pt-br':\n    case 'sk':\n    case 'sr':\n    case 'sq':\n    case 'sv':\n    case 'tr':\n      import('../fonts/fonts-shared.latin-ext.css');\n      import('../fonts/fonts-post.latin-ext.css');\n      break;\n    case 'vi':\n      import('../fonts/fonts-shared.vietnamese.css');\n      import('../fonts/fonts-post.vietnamese.css');\n      break;\n    case 'fa':\n      import('../fonts/fonts-post.persian.css');\n      break;\n    case 'ar':\n      import('../fonts/fonts-post.arabic.css');\n      break;\n    default:\n      break;\n  }\n};\n\n// TODO: the curried signature is weird.\nexport const createLanguageLink = (slug, lang) => {\n  const rawSlug = slug.replace(`${lang}/`, '');\n\n  return targetLang =>\n    targetLang === 'en' ? rawSlug : `${targetLang}${rawSlug}`;\n};\n\nexport const replaceAnchorLinksByLanguage = (html, code) => {\n  // Match any link using https://regexr.com/4airl\n  const matches = html.match(/https?:\\/\\/(www)?[^\\/\\s)\"?]+/gm);\n\n  // Return same html if no matches were found\n  // or code isn't supported\n  if (!matches || !supportedLanguages[code]) {\n    return html;\n  }\n\n  matches.forEach(url => {\n    // Replace to locale url if and only if exists in whitelist\n    // and has code registered\n    if (whitelist[url] && whitelist[url][code]) {\n      html = html.replace(url, whitelist[url][code]);\n    }\n  });\n\n  return html;\n};\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport get from 'lodash/get';\n\nimport '../fonts/fonts-post.css';\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport Panel from '../components/Panel';\nimport { formatPostDate, formatReadingTime } from '../utils/helpers';\nimport { rhythm, scale } from '../utils/typography';\nimport {\n  codeToLanguage,\n  createLanguageLink,\n  loadFontsForCode,\n  replaceAnchorLinksByLanguage,\n} from '../utils/i18n';\n\nimport 'katex/dist/katex.min.css';\n\nconst GITHUB_USERNAME = 'jedrazb';\nconst GITHUB_REPO_NAME = 'personal-blog';\nconst systemFont = `system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\",\n    \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\",\n    \"Droid Sans\", \"Helvetica Neue\", sans-serif`;\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title');\n    let {\n      previous,\n      next,\n      slug,\n      translations,\n      translatedLinks,\n    } = this.props.pageContext;\n    const lang = post.fields.langKey;\n\n    // Replace original links with translated when available.\n    let html = post.html;\n\n    // Replace original anchor links by lang when available in whitelist\n    // see utils/whitelist.js\n    html = replaceAnchorLinksByLanguage(html, lang);\n\n    translatedLinks.forEach(link => {\n      // jeez\n      function escapeRegExp(str) {\n        return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n      }\n      let translatedLink = '/' + lang + link;\n      html = html.replace(\n        new RegExp('\"' + escapeRegExp(link) + '\"', 'g'),\n        '\"' + translatedLink + '\"'\n      );\n    });\n\n    translations = translations.slice();\n    translations.sort((a, b) => {\n      return codeToLanguage(a) < codeToLanguage(b) ? -1 : 1;\n    });\n\n    loadFontsForCode(lang);\n    const editUrl = `https://github.com/${GITHUB_USERNAME}/${GITHUB_REPO_NAME}/edit/master/src/pages/${slug.slice(\n      1,\n      slug.length - 1\n    )}/index${lang === 'en' ? '' : '.' + lang}.md`;\n    const discussUrl = `https://mobile.twitter.com/search?q=${encodeURIComponent(\n      `https://j.blaszyk.me${slug}`\n    )}`;\n\n    const ogimage = post.frontmatter.ogimage;\n    const ogImagePath = ogimage && ogimage.childImageSharp.fixed.src;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          lang={lang}\n          title={post.frontmatter.title}\n          description={post.frontmatter.spoiler}\n          slug={post.fields.slug}\n          image={ogImagePath}\n        />\n        <main>\n          <article>\n            <header>\n              <h1\n                style={{\n                  color: 'var(--textTitle)',\n                }}\n              >\n                {post.frontmatter.title}\n              </h1>\n              <p\n                style={{\n                  ...scale(-1 / 5),\n                  display: 'block',\n                  marginBottom: rhythm(1),\n                  marginTop: rhythm(-4 / 5),\n                }}\n              >\n                {formatPostDate(post.frontmatter.date, lang)}\n                {` • ${formatReadingTime(post.timeToRead)}`}\n              </p>\n            </header>\n            <div dangerouslySetInnerHTML={{ __html: html }} />\n            <footer>\n              <p>\n                <a href={discussUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                  Discuss on Twitter\n                </a>\n                {` • `}\n                <a href={editUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                  Edit on GitHub\n                </a>\n              </p>\n            </footer>\n          </article>\n        </main>\n        <aside>\n          <h3\n            style={{\n              fontFamily: 'Montserrat, sans-serif',\n              marginTop: rhythm(0.25),\n            }}\n          >\n            <Link\n              style={{\n                boxShadow: 'none',\n                textDecoration: 'none',\n                color: 'var(--textLink)',\n              }}\n              to={'/'}\n            >\n              Personal blog\n            </Link>\n          </h3>\n          <Bio />\n          <nav>\n            <ul\n              style={{\n                display: 'flex',\n                flexWrap: 'wrap',\n                justifyContent: 'space-between',\n                listStyle: 'none',\n                padding: 0,\n              }}\n            >\n              <li>\n                {previous && (\n                  <Link\n                    to={previous.fields.slug}\n                    rel=\"prev\"\n                    style={{ marginRight: 20 }}\n                  >\n                    ← {previous.frontmatter.title}\n                  </Link>\n                )}\n              </li>\n              <li>\n                {next && (\n                  <Link to={next.fields.slug} rel=\"next\">\n                    {next.frontmatter.title} →\n                  </Link>\n                )}\n              </li>\n            </ul>\n          </nav>\n        </aside>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        spoiler\n        cta\n        ogimage {\n          childImageSharp {\n            fixed(width: 960) {\n              src\n            }\n          }\n        }\n      }\n      fields {\n        slug\n        langKey\n      }\n    }\n  }\n`;\n","export function formatReadingTime(minutes) {\n  let cups = Math.round(minutes / 5);\n  let bowls = 0;\n  if (cups > 5) {\n    return `${new Array(Math.round(cups / Math.E))\n      .fill('🍱')\n      .join('')} ${minutes} min read`;\n  } else {\n    return `${new Array(cups || 1).fill('☕️').join('')} ${minutes} min read`;\n  }\n}\n\n// `lang` is optional and will default to the current user agent locale\nexport function formatPostDate(date, lang) {\n  if (typeof Date.prototype.toLocaleDateString !== 'function') {\n    return date;\n  }\n\n  date = new Date(date);\n  const args = [\n    lang,\n    { day: 'numeric', month: 'long', year: 'numeric' },\n  ].filter(Boolean);\n  return date.toLocaleDateString(...args);\n}\n"],"names":["exports","en","Bio","render","style","display","marginBottom","rhythm","src","profilePic","alt","marginRight","width","height","borderRadius","maxWidth","href","React","children","fontSize","border","padding","background","wordBreak","SEO","meta","image","title","description","slug","lang","StaticQuery","query","data","siteMetadata","site","metaDescription","metaImage","siteUrl","url","ogCustomImagePath","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps","codeToLanguage","code","supportedLanguages","replace","BlogPostTemplate","post","this","props","markdownRemark","siteTitle","get","pageContext","previous","next","translations","translatedLinks","fields","langKey","html","matches","match","forEach","whitelist","replaceAnchorLinksByLanguage","link","translatedLink","RegExp","slice","sort","a","b","loadFontsForCode","editUrl","length","discussUrl","encodeURIComponent","ogimage","frontmatter","ogImagePath","childImageSharp","fixed","Layout","location","spoiler","color","scale","marginTop","formatPostDate","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","target","rel","fontFamily","Link","boxShadow","textDecoration","to","flexWrap","justifyContent","listStyle","minutes","cups","Math","round","Array","E","fill","join","Date","prototype","toLocaleDateString","args","day","month","year","filter","Boolean"],"sourceRoot":""}