{"version":3,"file":"component---src-templates-blog-index-js-95435a849106a12f6760.js","mappings":"8NAIMA,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KA+CH,OA/CGA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACJC,OAAA,WACE,OACE,0BACEC,MAAO,CACLC,WAAWC,EAAAA,EAAAA,IAAO,KAClBC,YAAYD,EAAAA,EAAAA,IAAO,KAGrB,uBAAKF,MAAO,CAAEI,MAAO,UACnB,qBAAGC,KAAK,WAAWC,OAAO,SAASC,IAAI,uBAAvC,QAIF,qBACEF,KAAK,0CACLC,OAAO,SACPC,IAAI,uBAHN,WAMK,IAjBP,IAkBS,IACP,qBACEF,KAAK,6BACLC,OAAO,SACPC,IAAI,uBAHN,UAMK,IAzBP,IA0BS,IACP,qBACEF,KAAK,kDACLC,OAAO,SACPC,IAAI,uBAHN,UAMK,IAjCP,IAkCS,IACP,qBACEF,KAAK,kEACLC,OAAO,SACPC,IAAI,uBAHN,UASL,EA/CGT,CAAeU,EAAAA,WAkDrB,I,iDCtCMC,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAkEH,OAlEGA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACJV,OAAA,WACE,IAAMW,EAAYC,GAAAA,CAAIC,KAAM,sCAGtBC,GAFUD,KAAKE,MAAMC,YAAYC,QAEzBL,GAAAA,CAAIC,KAAM,4BAExB,OACE,gBAACK,EAAA,EAAD,CAAQC,SAAUN,KAAKE,MAAMI,SAAUC,MAAOT,GAC5C,gBAACU,EAAA,EAAD,MACA,6BACE,gBAACC,EAAA,EAAD,OAEF,4BACGR,EAAMS,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNJ,EAAQR,GAAAA,CAAIY,EAAM,sBAAwBA,EAAKC,OAAOC,KACtDC,EAAaf,GAAAA,CAAIY,EAAM,0BAC7B,OACE,gBAAC,EAAAI,KAAD,CACE3B,MAAO,CACL4B,UAAW,OACXC,eAAgB,OAChBC,MAAO,qBAETC,GAAIR,EAAKC,OAAOC,KAChBlB,IAAI,YAEJ,2BAASyB,IAAKT,EAAKC,OAAOC,MACxB,8BACE,sBACEzB,MAAO,CACL8B,MAAO,kBACPG,WAAY,yBACZC,UAAUhC,EAAAA,EAAAA,IAAO,GACjBiC,cAAcjC,EAAAA,EAAAA,IAAO,EAAI,KAG1BiB,GAEH,8BACGiB,EAAAA,EAAAA,IAAeb,EAAKc,YAAYC,MADnC,OAESC,EAAAA,EAAAA,IAAkBhB,EAAKiB,YAFhC,OAIGC,EAAAA,EAAAA,IAAqBlB,EAAKc,eAG/B,qBACEK,wBAAyB,CACvBC,OAAQpB,EAAKc,YAAYO,WAI5BlB,GACC,gBAAC,EAAAmB,EAAD,CACEC,OAAOC,EAAAA,EAAAA,GAASrB,GAChBsB,IAAK,qBAQnB,gBAAC,EAAD,QAGL,EAlEGvC,CAA0BD,EAAAA,WAqEhC","sources":["webpack://j.blaszyk.me/./src/components/Footer.js","webpack://j.blaszyk.me/./src/templates/blog-index.js"],"sourcesContent":["import React from 'react';\n\nimport { rhythm } from '../utils/typography';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer\n        style={{\n          marginTop: rhythm(2.5),\n          paddingTop: rhythm(1),\n        }}\n      >\n        <div style={{ float: 'right' }}>\n          <a href=\"/rss.xml\" target=\"_blank\" rel=\"noopener noreferrer\">\n            rss\n          </a>\n        </div>\n        <a\n          href=\"https://mobile.twitter.com/jedr_blaszyk\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          twitter\n        </a>{' '}\n        &bull;{' '}\n        <a\n          href=\"https://github.com/jedrazb\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          github\n        </a>{' '}\n        &bull;{' '}\n        <a\n          href=\"https://www.strava.com/athletes/jedrzej_blaszyk\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          strava\n        </a>{' '}\n        &bull;{' '}\n        <a\n          href=\"https://www.yelp.com/user_details?userid=iNhtBqAm2UyyIxqZTc5Drg\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          yelp\n        </a>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import { Link, graphql } from 'gatsby';\nimport {\n  formatPostDate,\n  formatReadingTime,\n  formatNumberOfPhotos,\n} from '../utils/helpers';\n\nimport Bio from '../components/Bio';\nimport Footer from '../components/Footer';\nimport Layout from '../components/Layout';\nimport React from 'react';\nimport SEO from '../components/SEO';\nimport get from 'lodash/get';\nimport { rhythm } from '../utils/typography';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\n\nclass BlogIndexTemplate extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title');\n    const langKey = this.props.pageContext.langKey;\n\n    const posts = get(this, 'props.data.allMdx.edges');\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO />\n        <aside>\n          <Bio />\n        </aside>\n        <main>\n          {posts.map(({ node }) => {\n            const title = get(node, 'frontmatter.title') || node.fields.slug;\n            const indexImage = get(node, 'frontmatter.indexImage');\n            return (\n              <Link\n                style={{\n                  boxShadow: 'none',\n                  textDecoration: 'none',\n                  color: 'var(--textNormal)',\n                }}\n                to={node.fields.slug}\n                rel=\"bookmark\"\n              >\n                <article key={node.fields.slug}>\n                  <header>\n                    <h3\n                      style={{\n                        color: 'var(--textLink)',\n                        fontFamily: 'Montserrat, sans-serif',\n                        fontSize: rhythm(1),\n                        marginBottom: rhythm(1 / 4),\n                      }}\n                    >\n                      {title}\n                    </h3>\n                    <small>\n                      {formatPostDate(node.frontmatter.date)}\n                      {` • ${formatReadingTime(node.timeToRead)}`}\n                      {` • `}\n                      {formatNumberOfPhotos(node.frontmatter)}\n                    </small>\n                  </header>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: node.frontmatter.spoiler,\n                    }}\n                  />\n\n                  {indexImage && (\n                    <GatsbyImage\n                      image={getImage(indexImage)}\n                      alt={'Blog Image'}\n                    />\n                  )}\n                </article>\n              </Link>\n            );\n          })}\n        </main>\n        <Footer />\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndexTemplate;\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            spoiler\n            indexImage {\n              childImageSharp {\n                gatsbyImageData(width: 800, layout: CONSTRAINED)\n              }\n            }\n            images {\n              id\n            }\n            blogImages {\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["Footer","render","style","marginTop","rhythm","paddingTop","float","href","target","rel","React","BlogIndexTemplate","siteTitle","get","this","posts","props","pageContext","langKey","Layout","location","title","SEO","Bio","map","node","fields","slug","indexImage","Link","boxShadow","textDecoration","color","to","key","fontFamily","fontSize","marginBottom","formatPostDate","frontmatter","date","formatReadingTime","timeToRead","formatNumberOfPhotos","dangerouslySetInnerHTML","__html","spoiler","G","image","getImage","alt"],"sourceRoot":""}