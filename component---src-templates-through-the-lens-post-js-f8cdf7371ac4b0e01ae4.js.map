{"version":3,"file":"component---src-templates-through-the-lens-post-js-f8cdf7371ac4b0e01ae4.js","mappings":"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","sources":["webpack://j.blaszyk.me/./src/templates/through-the-lens-post.js"],"sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport get from 'lodash/get';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport { MDXProvider } from '@mdx-js/react';\nimport { BlockMath, InlineMath } from 'react-katex';\nimport { getSrc } from 'gatsby-plugin-image';\n\nimport '../fonts/fonts-post.css';\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport Panel from '../components/Panel';\nimport ImageGallery from '../components/ImageGallery';\nimport ImageComponent from '../components/ImageComponent';\nimport LazyIframe from '../components/LazyIframe';\nimport Comments from '../components/Comments';\nimport {\n  MobileContainer,\n  Column,\n  MakeItBigContainer,\n  ThreePhotosContainer,\n} from '../components/layout/Container';\nimport {\n  formatPostDate,\n  formatPostLocation,\n  formatNumberOfPhotos,\n} from '../utils/helpers';\nimport { rhythm, scale } from '../utils/typography';\n\nimport 'katex/dist/katex.min.css';\nimport './blog-post.css';\n\nconst GITHUB_USERNAME = 'jedrazb';\nconst GITHUB_REPO_NAME = 'personal-blog';\nconst systemFont = `system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\",\n    \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\",\n    \"Droid Sans\", \"Helvetica Neue\", sans-serif`;\n\nconst shortcodes = {\n  Link,\n  ImageGallery,\n  BlockMath,\n  InlineMath,\n  ImageComponent,\n  Column,\n  MakeItBigContainer,\n  ThreePhotosContainer,\n  LazyIframe,\n};\n\nclass ThroughTheLensPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.mdx;\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title');\n    let { previous, next, slug } = this.props.pageContext;\n\n    const ogimage = post.frontmatter.featuredImage;\n    const ogImagePath = ogimage && getSrc(ogimage);\n\n    const location = get(post, 'frontmatter.location');\n\n    const imageRows = get(post, 'frontmatter.imageRows');\n\n    const category = get(post, 'fields.category');\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={`${post.frontmatter.title} - Through the Lens`}\n          description={`Through the Lens: ${post.frontmatter.title}`}\n          slug={this.props.path}\n          image={ogImagePath}\n        />\n        <main>\n          <article className=\"post\">\n            <header>\n              <h1\n                style={{\n                  color: 'var(--textTitle)',\n                  marginTop: 0,\n                  marginBottom: '0.5rem',\n                }}\n              >\n                {post.frontmatter.title}\n              </h1>\n              <Link\n                style={{\n                  boxShadow: 'none',\n                  textDecoration: 'none',\n                  color: 'var(--textLink)',\n                  fontFamily: 'Montserrat, sans-serif',\n                }}\n                to={`/${post.fields.category}/`}\n                rel=\"bookmark\"\n              >\n                <p>{'Through The Lens'}</p>\n              </Link>\n              <p\n                style={{\n                  ...scale(-1 / 5),\n                  display: 'block',\n                  marginBottom: rhythm(1),\n                  marginTop: rhythm(-4 / 5),\n                }}\n              >\n                {formatPostDate(post.frontmatter.date)}\n                <span style={{ margin: '0 0.15rem' }}>{` • `}</span>\n                {formatPostLocation(location)}\n                <span style={{ margin: '0 0.15rem' }}>{` • `}</span>\n                {formatNumberOfPhotos(post.frontmatter)}\n              </p>\n            </header>\n            <MakeItBigContainer>\n              {imageRows.map((imgRow) => {\n                return (\n                  <MobileContainer>\n                    {imgRow.map((img) => {\n                      const imgExifData = img.childImageSharp.fields.exif;\n                      const exifCaption =\n                        // `${imgExifData.Make} ${imgExifData.Model}<br/>` +\n                        // `${imgExifData.LensMake} ${imgExifData.LensModel}<br/>` +\n                        `${imgExifData.FocalLengthRounded}mm | f/${imgExifData.FNumber} | ${imgExifData.ExposureTimeFormatted} | ISO ${imgExifData.ISO}`;\n                      return (\n                        <Column>\n                          <ImageComponent\n                            image={img}\n                            alt={img.childImageSharp.id}\n                            key={img.childImageSharp.id}\n                            description={exifCaption}\n                          />\n                        </Column>\n                      );\n                    })}\n                  </MobileContainer>\n                );\n              })}\n            </MakeItBigContainer>\n          </article>\n        </main>\n        <aside>\n          <nav>\n            <ul\n              style={{\n                display: 'flex',\n                flexWrap: 'wrap',\n                justifyContent: 'space-between',\n                listStyle: 'none',\n                padding: 0,\n                marginLeft: 0,\n              }}\n            >\n              <li>\n                {previous && (\n                  <Link\n                    to={`/${category}${previous.fields.slug}`}\n                    rel=\"prev\"\n                    // style={{ marginRight: 20 }}\n                  >\n                    ← {previous.frontmatter.title}\n                  </Link>\n                )}\n              </li>\n              <li>\n                {next && (\n                  <Link to={`/${category}${next.fields.slug}`} rel=\"next\">\n                    {next.frontmatter.title} →\n                  </Link>\n                )}\n              </li>\n            </ul>\n          </nav>\n          <h3\n            style={{\n              fontFamily: 'Montserrat, sans-serif',\n              marginTop: rhythm(0.25),\n            }}\n          >\n            <Link\n              style={{\n                boxShadow: 'none',\n                textDecoration: 'none',\n                color: 'var(--textLink)',\n                fontSize: rhythm(4 / 5),\n              }}\n              to={'/'}\n            >\n              Jedr's Blog\n            </Link>\n            {' • '}\n            <Link\n              style={{\n                boxShadow: 'none',\n                textDecoration: 'none',\n                color: 'var(--textLink)',\n                fontSize: rhythm(4 / 5),\n              }}\n              to={'/through-the-lens/'}\n            >\n              Through the Lens\n            </Link>\n          </h3>\n          <Bio />\n          <Comments />\n        </aside>\n      </Layout>\n    );\n  }\n}\n\nexport default ThroughTheLensPostTemplate;\n\nexport const pageQuery = graphql`\n  query ThroughTheLensPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      body\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        location\n        featuredImage {\n          childImageSharp {\n            gatsbyImageData(width: 960, layout: FIXED)\n          }\n        }\n        imageRows {\n          childImageSharp {\n            id\n            gatsbyImageData(width: 1800, layout: CONSTRAINED, quality: 90)\n            fields {\n              exif {\n                Make\n                Model\n                ExposureTimeFormatted\n                FNumber\n                FocalLength\n                FocalLengthRounded\n                LensMake\n                LensModel\n                ISO\n              }\n            }\n          }\n        }\n      }\n      fields {\n        slug\n        category\n      }\n    }\n  }\n`;\n"],"names":["Link","ImageGallery","BlockMath","InlineMath","ImageComponent","Column","MakeItBigContainer","ThreePhotosContainer","LazyIframe","ThroughTheLensPostTemplate","render","post","this","props","data","mdx","siteTitle","get","pageContext","previous","next","ogimage","slug","frontmatter","featuredImage","ogImagePath","getSrc","location","imageRows","category","title","description","path","image","className","style","color","marginTop","marginBottom","boxShadow","textDecoration","fontFamily","to","fields","rel","scale","display","rhythm","formatPostDate","date","margin","formatPostLocation","formatNumberOfPhotos","map","imgRow","img","imgExifData","childImageSharp","exif","exifCaption","FocalLengthRounded","FNumber","ExposureTimeFormatted","ISO","alt","id","key","flexWrap","justifyContent","listStyle","padding","marginLeft","fontSize","React"],"sourceRoot":""}