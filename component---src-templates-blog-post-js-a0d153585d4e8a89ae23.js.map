{"version":3,"file":"component---src-templates-blog-post-js-a0d153585d4e8a89ae23.js","mappings":"w4BAgCA,IAMMA,EAAa,CACjBC,KAAAA,EAAAA,KACAC,aAAAA,EAAAA,EACAC,UAAAA,EAAAA,UACAC,WAAAA,EAAAA,WACAC,eAAAA,EAAAA,EACAC,UAAAA,EAAAA,GACAC,OAAAA,EAAAA,GACAC,mBAAAA,EAAAA,GACAC,qBAAAA,EAAAA,GACAC,WAAAA,EAAAA,GAGIC,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KA4HH,OA5HGA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,IACvBC,EAAYC,GAAAA,CAAIL,KAAKC,MAAO,gCAClC,EAA+BD,KAAKC,MAAMK,YAApCC,EAAN,EAAMA,SAAUC,EAAhB,EAAgBA,KAAMC,EAAtB,EAAsBA,KAUhBC,GARgGD,EAAKE,MACzG,EACAF,EAAKG,OAAS,GAE0CC,mBAAmB,uBACpDJ,GAGTV,EAAKe,YAAYJ,SAC3BK,EAAcL,IAAWM,EAAAA,EAAAA,GAAON,GAEtC,OACE,gBAAC,IAAD,CAAQO,SAAUjB,KAAKC,MAAMgB,SAAUC,MAAOd,GAC5C,gBAAC,IAAD,CACEc,MAAOnB,EAAKe,YAAYI,MACxBC,YAAapB,EAAKe,YAAYM,QAC9BX,KAAMV,EAAKsB,OAAOZ,KAClBa,MAAOP,IAET,4BACE,2BAASQ,UAAU,QACjB,8BACE,sBACEC,MAAO,CACLC,MAAO,mBACPC,UAAW,SACXC,aAAc,WAGf5B,EAAKe,YAAYI,OAEpB,gBAAC,EAAA/B,KAAD,CACEqC,MAAO,CACLI,UAAW,OACXC,eAAgB,OAChBJ,MAAO,kBACPK,WAAY,0BAEdC,GAAE,IACFC,IAAI,YAEJ,yBAAI,SAEN,qBACER,MAAK,QACAS,EAAAA,EAAAA,KAAM,KADN,IAEHC,QAAS,QACTP,cAAcQ,EAAAA,EAAAA,IAAO,GACrBT,WAAWS,EAAAA,EAAAA,KAAO,QAGnBC,EAAAA,EAAAA,IAAerC,EAAKe,YAAYuB,MACjC,wBAAMb,MAAO,CAAEc,OAAQ,cAAvB,QACCC,EAAAA,EAAAA,IAAkBxC,EAAKyC,YACxB,wBAAMhB,MAAO,CAAEc,OAAQ,cAAvB,QACCG,EAAAA,EAAAA,IAAqB1C,EAAKe,eAG/B,gBAAC,EAAA4B,YAAD,CAAaC,WAAYzD,GACvB,gBAAC,EAAA0D,YAAD,CAAa9B,YAAaf,EAAKe,aAC5Bf,EAAK8C,SAKd,6BACE,2BACE,sBACErB,MAAO,CACLU,QAAS,OACTY,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,EACTC,WAAY,IAGd,0BACG3C,GACC,gBAAC,EAAApB,KAAD,CACE4C,GAAIxB,EAASc,OAAOZ,KACpBuB,IAAI,QAFN,KAKKzB,EAASO,YAAYI,QAI9B,0BACGV,GACC,gBAAC,EAAArB,KAAD,CAAM4C,GAAIvB,EAAKa,OAAOZ,KAAMuB,IAAI,QAC7BxB,EAAKM,YAAYI,MADpB,SAOR,sBACEM,MAAO,CACLM,WAAY,yBACZJ,WAAWS,EAAAA,EAAAA,IAAO,OAGpB,gBAAC,EAAAhD,KAAD,CACEqC,MAAO,CACLI,UAAW,OACXC,eAAgB,OAChBJ,MAAO,mBAETM,GAAI,KANN,gBAWF,gBAAC,IAAD,SAIP,EA5HGlC,CAAyBsD,EAAAA,WA+H/B","sources":["webpack://j.blaszyk.me/./src/templates/blog-post.js"],"sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport get from 'lodash/get';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport { MDXProvider } from '@mdx-js/react';\nimport { BlockMath, InlineMath } from 'react-katex';\nimport { getSrc } from 'gatsby-plugin-image';\n\nimport '../fonts/fonts-post.css';\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport Panel from '../components/Panel';\nimport ImageGallery from '../components/ImageGallery';\nimport ImageComponent from '../components/ImageComponent';\nimport LazyIframe from '../components/LazyIframe';\nimport {\n  Container,\n  Column,\n  MakeItBigContainer,\n  ThreePhotosContainer,\n} from '../components/layout/Container';\nimport {\n  formatPostDate,\n  formatReadingTime,\n  formatNumberOfPhotos,\n} from '../utils/helpers';\nimport { rhythm, scale } from '../utils/typography';\n\nimport 'katex/dist/katex.min.css';\nimport './blog-post.css';\n\nconst GITHUB_USERNAME = 'jedrazb';\nconst GITHUB_REPO_NAME = 'personal-blog';\nconst systemFont = `system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\",\n    \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\",\n    \"Droid Sans\", \"Helvetica Neue\", sans-serif`;\n\nconst shortcodes = {\n  Link,\n  ImageGallery,\n  BlockMath,\n  InlineMath,\n  ImageComponent,\n  Container,\n  Column,\n  MakeItBigContainer,\n  ThreePhotosContainer,\n  LazyIframe,\n};\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.mdx;\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title');\n    let { previous, next, slug } = this.props.pageContext;\n\n    const editUrl = `https://github.com/${GITHUB_USERNAME}/${GITHUB_REPO_NAME}/edit/master/content/blog/${slug.slice(\n      1,\n      slug.length - 1\n    )}/index.mdx`;\n    const discussUrl = `https://mobile.twitter.com/search?q=${encodeURIComponent(\n      `https://j.blaszyk.me${slug}`\n    )}`;\n\n    const ogimage = post.frontmatter.ogimage;\n    const ogImagePath = ogimage && getSrc(ogimage);\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.spoiler}\n          slug={post.fields.slug}\n          image={ogImagePath}\n        />\n        <main>\n          <article className=\"post\">\n            <header>\n              <h1\n                style={{\n                  color: 'var(--textTitle)',\n                  marginTop: '1.5rem',\n                  marginBottom: '0.5rem',\n                }}\n              >\n                {post.frontmatter.title}\n              </h1>\n              <Link\n                style={{\n                  boxShadow: 'none',\n                  textDecoration: 'none',\n                  color: 'var(--textLink)',\n                  fontFamily: 'Montserrat, sans-serif',\n                }}\n                to={`/`}\n                rel=\"bookmark\"\n              >\n                <p>{'Blog'}</p>\n              </Link>\n              <p\n                style={{\n                  ...scale(-1 / 5),\n                  display: 'block',\n                  marginBottom: rhythm(1),\n                  marginTop: rhythm(-4 / 5),\n                }}\n              >\n                {formatPostDate(post.frontmatter.date)}\n                <span style={{ margin: '0 0.15rem' }}>{` • `}</span>\n                {formatReadingTime(post.timeToRead)}\n                <span style={{ margin: '0 0.15rem' }}>{` • `}</span>\n                {formatNumberOfPhotos(post.frontmatter)}\n              </p>\n            </header>\n            <MDXProvider components={shortcodes}>\n              <MDXRenderer frontmatter={post.frontmatter}>\n                {post.body}\n              </MDXRenderer>\n            </MDXProvider>\n          </article>\n        </main>\n        <aside>\n          <nav>\n            <ul\n              style={{\n                display: 'flex',\n                flexWrap: 'wrap',\n                justifyContent: 'space-between',\n                listStyle: 'none',\n                padding: 0,\n                marginLeft: 0,\n              }}\n            >\n              <li>\n                {previous && (\n                  <Link\n                    to={previous.fields.slug}\n                    rel=\"prev\"\n                    // style={{ marginRight: 20 }}\n                  >\n                    ← {previous.frontmatter.title}\n                  </Link>\n                )}\n              </li>\n              <li>\n                {next && (\n                  <Link to={next.fields.slug} rel=\"next\">\n                    {next.frontmatter.title} →\n                  </Link>\n                )}\n              </li>\n            </ul>\n          </nav>\n          <h3\n            style={{\n              fontFamily: 'Montserrat, sans-serif',\n              marginTop: rhythm(0.25),\n            }}\n          >\n            <Link\n              style={{\n                boxShadow: 'none',\n                textDecoration: 'none',\n                color: 'var(--textLink)',\n              }}\n              to={'/'}\n            >\n              Jedr's Blog\n            </Link>\n          </h3>\n          <Bio />\n        </aside>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      body\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        spoiler\n        cta\n        ogimage {\n          childImageSharp {\n            gatsbyImageData(width: 960, layout: FIXED)\n          }\n        }\n        images {\n          childImageSharp {\n            gatsbyImageData(width: 1400, layout: CONSTRAINED, quality: 90)\n          }\n        }\n        blogImages {\n          childImageSharp {\n            gatsbyImageData(width: 1400, layout: CONSTRAINED, quality: 90)\n          }\n        }\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;\n"],"names":["shortcodes","Link","ImageGallery","BlockMath","InlineMath","ImageComponent","Container","Column","MakeItBigContainer","ThreePhotosContainer","LazyIframe","BlogPostTemplate","render","post","this","props","data","mdx","siteTitle","get","pageContext","previous","next","slug","ogimage","slice","length","encodeURIComponent","frontmatter","ogImagePath","getSrc","location","title","description","spoiler","fields","image","className","style","color","marginTop","marginBottom","boxShadow","textDecoration","fontFamily","to","rel","scale","display","rhythm","formatPostDate","date","margin","formatReadingTime","timeToRead","formatNumberOfPhotos","MDXProvider","components","MDXRenderer","body","flexWrap","justifyContent","listStyle","padding","marginLeft","React"],"sourceRoot":""}